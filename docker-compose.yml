version: '3'

services:
  gatewayservice:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    ports:
      - "9999:9999"
    environment:
      - SPRING_APPLICATION_NAME=gateway-service
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
    depends_on:
      - consul

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=127.0.0.1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="test_topic:1:3"


  userprofileservice:
    build:
      context: ./user-profile-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - SPRING_APPLICATION_NAME=user-profile-service
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/sportepisen_DB
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    depends_on:
      - consul
      - db


  mock:
    build:
      context: ./mock
      dockerfile: Dockerfile
    ports:
      - "8089:8089"
    environment:
      - SPRING_APPLICATION_NAME=mock
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/sportepisen_DB
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - GATEWAY_HOST=gatewayservice:9999
    depends_on:
      - db
      - gatewayservice
      - heartratecollector

  consul:
    image: consul
    ports:
      - "8500:8500"
  db:
    image: mysql
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=sportepisen_DB,eventstore_hr_collected,storeevent_coach_cnx,storeevent_hr_emergency


  heartratecollector:
    build:
      context: ./heart-rate-collector-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_APPLICATION_NAME=heart-rate-collector-service
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500


      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/eventstore_hr_collected
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    depends_on:
      - consul
      - db
      - gatewayservice
      - kafka


  notificationchannelmanagerservice:
    build:
      context: ./notification-channel-manager-service
    ports:
      - "8086:8086"
    environment:
      - SPRING_APPLICATION_NAME=notification-channel-manager-service
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500

      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/storeevent_coach_cnx
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      
      
    depends_on:
      - consul
      - kafka
      - db
      


  heartrateworker:
    build:
      context: ./heart-rate-second-worker-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_APPLICATION_NAME=heart-rate-second-worker-service
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/storeevent_hr_emergency
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root

      - SPRING_CLOUD_STREAM_BINDINGS_HREVENTCONSUMER_IN_0_DESTINATION=event_hr_collector
      - SPRING_CLOUD_FUNCTION_DEFINITION=hrEventConsumer
      - SPRING_CLOUD_STREAM_POLLER_FIXED_DELAY=100
      - SPRING_CLOUD_STREAM_KAFKA_STREAMS_BINDER_CONFIGURATION_COMMIT_INTERVAL_MS=1000
      - SPRING_REDIS_HOST=redis
      
    depends_on:
      - consul
      - db
      - kafka
      - redis
        


    

  emergencynotificationagentservice:
    build:
      context: ./emergency-notification-agent-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_APPLICATION_NAME=emergency-notification-agent-service
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/sportepisen_DB
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root

      - SPRING_CLOUD_STREAM_BINDINGS_HREMERGENCYCONSUMER_IN_0_DESTINATION=event_hr_emergency
      - SPRING_CLOUD_STREAM_BINDINGS_COACHEVENTCNXCONSUMER_IN_0_DESTINATION=event_coach_cnx
      - SPRING_CLOUD_STREAM_POLLER_FIXED-DELAY=100
      - SPRING_CLOUD_FUNCTION_DEFINITION=hrEmergencyConsumer;coachEventCnxConsumer
      - SPRING_CLOUD_STREAM_KAFKA_STREAMS_BINDER_CONFIGURATION_COMMIT_INTERVAL_MS=1000


    depends_on:
      - consul
      - db
      - kafka
      - zookeeper   

  eventscollectorservice:
    build:
      context: ./events-collector-service
    ports:
      - "8079:8079"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/global_event_store




      - SPRING_CLOUD_STREAM_BINDINGS_COACHEVENTCNXCONSUMER_IN_0_DESTINATION=event_coach_cnx
      - SPRING_CLOUD_STREAM_BINDINGS_HREMERGENCYCONSUMER_IN_0_DESTINATION=event_hr_emergency
      - SPRING_CLOUD_STREAM_BINDINGS_HREVENTCONSUMER_IN_0_DESTINATION=event_hr_collector
      - SPRING_CLOUD_STREAM_BINDINGS_NOTIFICATIONCOACHCONSUMER_IN_0_DESTINATION=event_notification_coach
      - SPRING_CLOUD_STREAM_POLLER_FIXED_DELAY=100
      - SPRING_CLOUD_FUNCTION_DEFINITION=hrEmergencyConsumer;coachEventCnxConsumer;hrEventConsumer;notificationCoachConsumer
      - SPRING_CLOUD_STREAM_KAFKA_STREAMS_BINDER_CONFIGURATION_COMMIT_INTERVAL_MS=1000


    depends_on:
      - mongo
      - kafka
      - zookeeper   


      
  redis:
    image: redis
    ports:
      - "6380:6379"    
      
  mongo:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db
    ports:
      - "27018:27017"

volumes:
  db_data:
  mongo_data:





  
