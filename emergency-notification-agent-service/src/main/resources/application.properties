server.port=8085
spring.application.name=emergency-notification-agent-service
#spring.config.import=optional:configserver:http://localhost:8888
spring.cloud.config.enabled=false

spring.datasource.url=jdbc:mysql://localhost:3306/sportepisen_DB
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update

#kafka
#faire le mapping avec le topic event_coach_cnx
#faire le mapping avec le topic 1
spring.cloud.stream.bindings.coachEventCnxConsumer-in-0.destination=event_coach_cnx

#faire le mapping avec le topic 2
spring.cloud.stream.bindings.coachEventCnxConsumer-out-0.destination=R2
#si j'utlise plusieur fonctions dans la méme app , par defaut une fonction dans chaque microservice
spring.cloud.function.definition=coachEventCnxConsumer
# envoyer  msg  chaque 0.1 seconde , supplier
spring.cloud.stream.poller.fixed-delay=100

# consumer & producer
#input
#spring.cloud.stream.bindings.pageEventFunction-in-0.destination=R2
##output
#spring.cloud.stream.bindings.pageEventFunction-out-0.destination=R3

#spring.kafka.streams.application-id=app2
##stream
#spring.cloud.stream.bindings.kStreamFunction-in-0.destination=R2
#spring.cloud.stream.bindings.kStreamFunction-out-0.destination=R4
#timeout stream , commiter les resltat aprés chaque seconde
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000 

#
#spring.kafka.consumer.bootstrap-servers=localhost:9092
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer





